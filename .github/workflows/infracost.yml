name: Infracost Cost Analysis

on:
  pull_request:
    paths:
      - 'calavia-eks-infra/**'
      - '.infracost/**'
  push:
    branches:
      - main
      - setup
    paths:
      - 'calavia-eks-infra/**' 
      - '.infracost/**'
  workflow_dispatch:

env:
  TF_ROOT: calavia-eks-infra

jobs:
  infracost-staging:
    name: Cost Analysis - Staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      - name: Terraform Init (base)
        run: |
          cd ${TF_ROOT}/environments/staging
          terraform init -backend=false

      - name: Terraform Validate (base)
        run: |
          cd ${TF_ROOT}/environments/staging
          terraform validate

      - name: Generate Infracost cost baseline
        run: |
          infracost breakdown --path=${TF_ROOT}/environments/staging \
                            --format=json \
                            --usage-file=.infracost/usage-staging.yml \
                            --out-file=/tmp/infracost-base.json

      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Terraform Init (PR)
        run: |
          cd ${TF_ROOT}/environments/staging
          terraform init -backend=false

      - name: Terraform Validate (PR)
        run: |
          cd ${TF_ROOT}/environments/staging
          terraform validate

      - name: Generate Infracost diff
        run: |
          infracost diff --path=${TF_ROOT}/environments/staging \
                        --format=json \
                        --usage-file=.infracost/usage-staging.yml \
                        --compare-to=/tmp/infracost-base.json \
                        --out-file=/tmp/infracost.json

      - name: Post Infracost comment
        if: github.event_name == 'pull_request'
        run: |
          infracost comment github --path=/tmp/infracost.json \
                                   --repo=$GITHUB_REPOSITORY \
                                   --github-token=${{github.token}} \
                                   --pull-request=${{github.event.pull_request.number}} \
                                   --behavior=update

      - name: Post Infracost comment (commit)
        if: github.event_name == 'push'
        run: |
          infracost comment github --path=/tmp/infracost.json \
                                   --repo=$GITHUB_REPOSITORY \
                                   --github-token=${{github.token}} \
                                   --commit=${{github.sha}} \
                                   --behavior=update

  infracost-production:
    name: Cost Analysis - Production
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      - name: Terraform Init (base)
        run: |
          cd ${TF_ROOT}/environments/production
          terraform init -backend=false

      - name: Terraform Validate (base)
        run: |
          cd ${TF_ROOT}/environments/production
          terraform validate

      - name: Generate Infracost cost baseline
        run: |
          infracost breakdown --path=${TF_ROOT}/environments/production \
                            --format=json \
                            --usage-file=.infracost/usage-production.yml \
                            --out-file=/tmp/infracost-base.json

      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Terraform Init (PR)
        run: |
          cd ${TF_ROOT}/environments/production
          terraform init -backend=false

      - name: Terraform Validate (PR)
        run: |
          cd ${TF_ROOT}/environments/production
          terraform validate

      - name: Generate Infracost diff
        run: |
          infracost diff --path=${TF_ROOT}/environments/production \
                        --format=json \
                        --usage-file=.infracost/usage-production.yml \
                        --compare-to=/tmp/infracost-base.json \
                        --out-file=/tmp/infracost.json

      - name: Post Infracost comment
        if: github.event_name == 'pull_request'
        run: |
          infracost comment github --path=/tmp/infracost.json \
                                   --repo=$GITHUB_REPOSITORY \
                                   --github-token=${{github.token}} \
                                   --pull-request=${{github.event.pull_request.number}} \
                                   --behavior=update

      - name: Post Infracost comment (commit)
        if: github.event_name == 'push'
        run: |
          infracost comment github --path=/tmp/infracost.json \
                                   --repo=$GITHUB_REPOSITORY \
                                   --github-token=${{github.token}} \
                                   --commit=${{github.sha}} \
                                   --behavior=update

  infracost-summary:
    name: Monthly Cost Summary
    runs-on: ubuntu-latest
    needs: [infracost-staging, infracost-production]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate combined cost report
        run: |
          # Generar reportes individuales
          infracost breakdown --path=${TF_ROOT}/environments/staging \
                            --usage-file=.infracost/usage-staging.yml \
                            --format=json \
                            --out-file=/tmp/staging-costs.json
                            
          infracost breakdown --path=${TF_ROOT}/environments/production \
                            --usage-file=.infracost/usage-production.yml \
                            --format=json \
                            --out-file=/tmp/production-costs.json
          
          # Combinar reportes
          infracost output --path="/tmp/staging-costs.json,/tmp/production-costs.json" \
                          --format=slack-message \
                          --out-file=/tmp/slack-message.json

      - name: Send Slack notification
        if: env.SLACK_WEBHOOK_URL != ''
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          custom_payload: |
            {
              "text": "üìä Monthly Infrastructure Cost Report",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üí∞ Board Games Infrastructure - Cost Analysis"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn", 
                    "text": "üìà *Cost breakdown has been updated.*\n\nView detailed breakdown in the GitHub Actions logs or Infracost dashboard."
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View GitHub Action"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }

  budget-alerts:
    name: Budget Monitoring
    runs-on: ubuntu-latest  
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Check budget thresholds
        run: |
          # Verificar costes de staging
          STAGING_COST=$(infracost breakdown --path=${TF_ROOT}/environments/staging \
                        --usage-file=.infracost/usage-staging.yml \
                        --format=json | jq -r '.totalMonthlyCost')
          
          # Verificar costes de producci√≥n  
          PRODUCTION_COST=$(infracost breakdown --path=${TF_ROOT}/environments/production \
                           --usage-file=.infracost/usage-production.yml \
                           --format=json | jq -r '.totalMonthlyCost')
          
          echo "Staging monthly cost: \$${STAGING_COST}"
          echo "Production monthly cost: \$${PRODUCTION_COST}"
          
          # Alertas de presupuesto
          if (( $(echo "$STAGING_COST > 500" | bc -l) )); then
            echo "‚ö†Ô∏è STAGING BUDGET ALERT: Monthly cost (\$${STAGING_COST}) exceeds \$500 threshold"
            echo "staging_budget_exceeded=true" >> $GITHUB_ENV
          fi
          
          if (( $(echo "$PRODUCTION_COST > 1500" | bc -l) )); then
            echo "‚ö†Ô∏è PRODUCTION BUDGET ALERT: Monthly cost (\$${PRODUCTION_COST}) exceeds \$1500 threshold"
            echo "production_budget_exceeded=true" >> $GITHUB_ENV
          fi

      - name: Send budget alert
        if: env.staging_budget_exceeded == 'true' || env.production_budget_exceeded == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          custom_payload: |
            {
              "text": "üö® BUDGET ALERT - Infrastructure Costs",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üö® Budget Alert - Infrastructure Costs Exceeded"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Repository:* ${{ github.repository }}\n*Alert Time:* $(date)\n\n‚ö†Ô∏è *One or more environments have exceeded their budget thresholds.*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Staging Threshold:* $500/month"
                    },
                    {
                      "type": "mrkdwn", 
                      "text": "*Production Threshold:* $1500/month"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Review Costs"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
