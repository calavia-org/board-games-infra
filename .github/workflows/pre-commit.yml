name: Pre-commit Checks

on:
  push:
    branches: [main, setup]
  pull_request:
    branches: [main]

jobs:
  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.8.5'

      - name: Install system dependencies
        run: |
          # Install shellcheck
          sudo apt-get update
          sudo apt-get install -y shellcheck

          # Install hadolint for Dockerfile linting
          wget -O hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/

          # Install TFLint
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

          # Install TFSec
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install pre-commit
          pip install yamllint
          pip install detect-secrets

      - name: Install Node.js dependencies
        run: |
          npm install -g markdownlint-cli

      - name: Install Go dependencies
        run: |
          go install github.com/rhysd/actionlint/cmd/actionlint@latest

      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Initialize Terraform modules
        run: |
          # Initialize all Terraform directories
          find . -name "*.tf" -exec dirname {} \; | sort -u | while read dir; do
            if [ -f "$dir/main.tf" ] || [ -f "$dir/versions.tf" ]; then
              echo "Initializing Terraform in $dir"
              cd "$dir"
              terraform init -backend=false || echo "Failed to init $dir"
              cd - > /dev/null
            fi
          done

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files --verbose

      - name: Upload pre-commit results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: pre-commit-results
          path: .pre-commit.log
          retention-days: 7
